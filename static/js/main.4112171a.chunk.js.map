{"version":3,"sources":["store/index.js","store/redux.js","components/FilmCard/FilmCard.js","components/FilmsList/FilmsList.js","components/FormField/FormField.js","validation.js","components/NewFilm/NewFilm.js","components/FilmDetails/FilmDetails.js","App.js","index.js"],"names":["ACTION_TYPES","ADD_NEW_FILM","addNewFilm","film","type","payload","initialState","films","store","reducer","state","listeners","getState","dispatch","action","forEach","listener","subscribe","cb","Error","push","filter","createStore","arguments","length","undefined","_objectSpread","concat","Object","toConsumableArray","FilmCard","props","title","description","imgUrl","imdbUrl","id","react_default","a","createElement","react_router_dom","to","className","src","alt","href","defaultProps","FilmsList","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","unsubscribe","getFilmsList","setState","inherits","createClass","key","value","map","FilmCard_FilmCard_FilmCard","assign","React","Component","FormField","memo","error","name","label","onChange","placeholder","inputClass","cx","is-danger","controlClass","has-icons-right","Control","htmlFor","required","formValidators","NewFilm","_Component","handleChange","_ref","_ref$target","target","prevState","defineProperty","handleSubmit","event","preventDefault","onAdd","formValue","getFormValue","_this$validate","validate","hasError","errors","newState","_ref3","_ref4","slicedToArray","fromEntries","entries","reduce","acc","entry","NewFilm_objectSpread","_ref5","_ref6","fieldData","validator","some","errorData","_this$state","onSubmit","FormField_FormField","FilmDetails","match","params","find","oneFilm","String","_this$state$film","API_URL","FilmDetailsWithRouter","withRouter","App","filmsList","searchWord","handleAddFilm","newFilm","App_objectSpread","handleSearchChange","searchFilm","fetch","then","response","json","data","Title","Plot","Poster","Website","imdbID","_this2","onClick","react_router","exact","path","component","NewFilm_NewFilm","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.4112171a.chunk.js","sourcesContent":["import { createStore } from './redux';\n\nconst ACTION_TYPES = {\n  ADD_NEW_FILM: 'FILM::ADD',\n};\n\nexport const addNewFilm = film => ({\n  type: ACTION_TYPES.ADD_NEW_FILM,\n  payload: film,\n});\n\nconst initialState = {\n  films: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.ADD_NEW_FILM: {\n      return {\n        ...state,\n        films: [...state.films, action.payload],\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);\n\n// console.log('STATE', store.getState());\n//\n// const unsubscribe1 = store.subscribe((state) => {\n//   console.log(state.films.map(({ title }) => title));\n// });\n//\n// store.dispatch(addNewFilm({ title: 'Avengers' }));\n//\n// store.subscribe((state) => {\n//   console.log(state.films);\n// });\n// unsubscribe1();\n//\n// store.dispatch(addNewFilm({ title: 'Spider-Man' }));\n//\n// console.log('STATE', store.getState());\n","export function createStore(reducer) {\n  let state = reducer();\n  let listeners = [];\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action) {\n      state = reducer(state, action);\n\n      listeners.forEach(listener => listener(state));\n    },\n    subscribe(cb) {\n      if (typeof cb !== 'function') {\n        throw new Error('Callback should be a function');\n      }\n\n      listeners.push(cb);\n\n      return () => {\n        listeners = listeners\n          .filter(listener => listener !== cb);\n      };\n    },\n  };\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilmCard.scss';\nimport { Link } from 'react-router-dom';\n\nexport const FilmCard = (props) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    id,\n  } = props;\n\n  return (\n    <Link to={`/film/${id}`} className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nFilmCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nFilmCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { store } from '../../store/index';\nimport './FilmsList.scss';\nimport { FilmCard } from '../FilmCard';\n\nexport class FilmsList extends React.Component {\n  state = {\n    films: [],\n  };\n\n  unsubscribe = null;\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(this.getFilmsList);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  getFilmsList = () => {\n    this.setState({\n      films: [...store.getState().films],\n    });\n  }\n\n  render() {\n    const { films } = this.state;\n\n    return (\n      <div className=\"films\">\n        {films.map(film => (\n          <FilmCard key={film.id} {...film} />\n        ))}\n      </div>\n    );\n  }\n};\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  })),\n};\n\nFilmsList.defaultProps = {\n  films: [],\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './FormField.scss';\n\nexport const FormField = memo((props) => {\n  const {\n    error,\n    name,\n    label,\n    type,\n    onChange,\n    placeholder,\n    value,\n  } = props;\n\n  const inputClass = cx('input', { 'is-danger': !!error });\n  const controlClass = cx('control', { 'has-icons-right': !!error });\n\n  const Control = type === 'textarea' ? type : 'input';\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className={controlClass}>\n        <Control\n          name={name}\n          id={name}\n          className={inputClass}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && (\n          <span className=\"icon is-small is-right\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n      </div>\n\n      {error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n});\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  error: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nFormField.defaultProps = {\n  error: '',\n  type: 'text',\n  placeholder: 'Type text here',\n};\n","export const required = (name, value) => {\n  return value\n    ? null\n    : `Field ${name} is required`;\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../FormField';\nimport { required } from '../../validation';\n\nconst initialState = {\n  title: {\n    value: '',\n    error: null,\n  },\n  description: {\n    value: '',\n    error: null,\n  },\n  imgUrl: {\n    value: '',\n    error: null,\n  },\n  imdbUrl: {\n    value: '',\n    error: null,\n  },\n};\n\nconst formValidators = {\n  title: required,\n  imgUrl: required,\n  imdbUrl: required,\n};\n\nexport class NewFilm extends Component {\n  state = initialState;\n\n  getFormValue() {\n    return Object.entries(this.state)\n      .reduce((acc, entry) => ({\n        ...acc,\n        [entry[0]]: entry[1].value,\n      }), {});\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState(prevState => ({\n      [name]: {\n        value,\n        error: prevState[name].error,\n      },\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onAdd } = this.props;\n    const formValue = this.getFormValue();\n\n    const { hasError, errors } = this.validate();\n\n    if (hasError) {\n      this.setState((prevState) => {\n        const newState = errors.map(([name, error]) => {\n          return [\n            name,\n            {\n              error,\n              value: prevState[name].value,\n            },\n          ];\n        });\n\n        return Object.fromEntries(newState);\n      });\n    } else {\n      this.setState(initialState);\n      onAdd(formValue);\n    }\n  };\n\n  validate() {\n    const errors = Object.entries(this.state)\n      .map(([name, fieldData]) => {\n        const validator = formValidators[name];\n        const error = validator\n          ? validator(name, fieldData.value)\n          : null;\n\n        return [name, error];\n      });\n\n    const hasError = errors\n      .some(errorData => !!errorData[1]);\n\n    return {\n      hasError,\n      errors,\n    };\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormField\n          {...title}\n          name=\"title\"\n          placeholder=\"Input film title\"\n          label=\"Title\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...description}\n          type=\"textarea\"\n          name=\"description\"\n          placeholder=\"Input film description\"\n          label=\"Description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imgUrl}\n          name=\"imgUrl\"\n          placeholder=\"Paste image url\"\n          label=\"Image url\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          {...imdbUrl}\n          name=\"imdbUrl\"\n          placeholder=\"Paste IMDB url\"\n          label=\"IMDB url\"\n          onChange={this.handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewFilm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { store } from '../../store/index';\n\nexport class FilmDetails extends Component {\n  state = {\n    film: [],\n  };\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(this.getFilmsList);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  getFilmsList = () => {\n    const { match: { params: { id } } } = this.props;\n\n    const film = store.getState().films.find(oneFilm => String(oneFilm.id) === id);\n\n    this.setState({\n      film,\n    });\n  }\n\n  render() {\n    const {\n      film: {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n      },\n    } = this.state;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"https://images-na.ssl-images-amazon.com/images/I/315W5zxAnTL._SY355_.png\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {description}\n            <br />\n            <a href={imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFilmDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nFilmDetails.defaultProps = {\n  description: '',\n};\n","import React, { Component } from 'react';\n\nimport './App.scss';\n\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  withRouter,\n} from 'react-router-dom';\nimport { store, addNewFilm } from './store/index';\nimport { FilmsList } from './components/FilmsList';\nimport { NewFilm } from './components/NewFilm';\nimport { FormField } from './components/FormField';\nimport { FilmDetails } from './components/FilmDetails';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=2f4a38c9&t=';\nconst FilmDetailsWithRouter = withRouter(FilmDetails);\n\nexport class App extends Component {\n  state = {\n    filmsList: [],\n    searchWord: '',\n  };\n\n  unsubscribe = null;\n\n  componentDidMount() {\n    this.unsubscribe = store.subscribe(this.getFilmsList);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  getFilmsList = () => {\n    this.setState({\n      filmsList: [...store.getState().films],\n    });\n  }\n\n  handleAddFilm = (newFilm) => {\n    const prevState = store.getState().films;\n\n    store.dispatch(addNewFilm(\n      {\n        id: prevState[prevState.length - 1].id + 1,\n        ...newFilm,\n      },\n    ));\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchWord: target.value });\n  };\n\n  searchFilm = (searchWord) => {\n    fetch(`${API_URL}${searchWord}`)\n      .then(response => response.json())\n      .then((data) => {\n        const {\n          Title,\n          Plot,\n          Poster,\n          Website,\n          imdbID,\n        } = data;\n\n        const newFilm = {\n          id: imdbID,\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: Website,\n        };\n\n        store.dispatch(addNewFilm(newFilm));\n      });\n  };\n\n  render() {\n    const { searchWord } = this.state;\n\n    return (\n      <HashRouter>\n        <div className=\"page\">\n          <div className=\"content\">\n            <div className=\"box\">\n              <FormField\n                value={searchWord}\n                name=\"searchWord\"\n                placeholder=\"Type search word\"\n                label=\"Search film\"\n                onChange={this.handleSearchChange}\n              />\n              <button\n                onClick={() => this.searchFilm(searchWord)}\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Search film\n              </button>\n            </div>\n\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={FilmsList}\n              />\n              <Route\n                exact\n                path=\"/film/:id\"\n                component={FilmDetailsWithRouter}\n              />\n            </Switch>\n          </div>\n          <div className=\"sidebar\">\n            <NewFilm onAdd={this.handleAddFilm} />\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}